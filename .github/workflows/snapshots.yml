name: Diff screenshots via Pull Request

on:
  workflow_call:
    inputs:
      node_version:
        description: e.g. x.y.z
        required: true
        type: string
      install_command:
        description: e.g. npm ci
        required: true
        type: string
      snapshots_command:
        description: e.g. npm run snapshot
        required: true
        type: string
      snapshots_dirpath:
        description: e.g. test/vrt.e2e.ts-snapshots
        required: true
        type: string
      your_repo:
        description: e.g. github.repository
        type: string
        default: ${{ github.repository }}
      vrt_repo:
        description: e.g. org_name/vrt-workflows-2024
        required: true
        type: string
      playwright_image_tag:
        description: e.g. v1.49.1-noble
        type: string
        default: latest
      force_update_base_snapshots:
        description: e.g. true or false
        type: boolean
        default: false
      cache_key:
        description: pass to key of actions/cache@v4
        type: string
      cache_paths:
        description: pass to pathes of actions/cache@v4
        type: string
      cache_restore_keys:
        description: pass to restore-keys of actions/cache@v4
        type: string
    secrets:
      your_repo_github_token:
        required: true
      vrt_repo_github_token:
        required: true
      env_gpr_read_token:
        required: false

jobs:
  snapshots:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:${{ inputs.playwright_image_tag }}
    env:
      GPR_READ_TOKEN: ${{ secrets.env_gpr_read_token }}
    steps:
      - name: Set safe directory for permission on docker container
        run: git config --global --add safe.directory "$(pwd)"
      - name: Clone your repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: ${{ inputs.your_repo }}
          token: ${{ secrets.your_repo_github_token }}
      - name: Setup variables
        run: |
          echo "vrt_diff_temp_branch=diff" >> $GITHUB_OUTPUT
          echo "vrt_diff_dirname=diff" >> $GITHUB_OUTPUT
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "vrt_diff_workspace=.vrt-diff-${{ github.event.pull_request.head.sha }}" >> $GITHUB_OUTPUT
            echo "vrt_diff_base_branch=snapshots/${{ inputs.your_repo }}/${{ github.event.pull_request.base.sha }}" >> $GITHUB_OUTPUT
            echo "base_sha=${{ github.event.pull_request.base.sha }}" >> $GITHUB_OUTPUT
            echo "head_sha=${{ github.event.pull_request.head.sha }}" >> $GITHUB_OUTPUT
          else
            echo "vrt_diff_workspace=.vrt-diff-${{ github.sha }}" >> $GITHUB_OUTPUT
            echo "vrt_diff_base_branch=snapshots/${{ inputs.your_repo }}/${{ github.sha }}" >> $GITHUB_OUTPUT
            echo "base_sha=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi
        id: vars
      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
      - name: Clone vrt repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: ${{ inputs.vrt_repo }}
          path: ${{ steps.vars.outputs.vrt_diff_workspace }}
          token: ${{ secrets.vrt_repo_github_token }}
      - name: Restore some caches
        uses: actions/cache@v4
        with:
          key: ${{ inputs.cache_key }}
          path: ${{ inputs.cache_paths }}
          restore-keys: ${{ inputs.cache_restore_keys }}
        if: inputs.cache_key
      - name: Checkout vrt by base branch
        run: |
          cd ${{ steps.vars.outputs.vrt_diff_workspace }}
          git config user.name  "GitHub Action"
          git config user.email "action@github.com"
          if [ "${{ inputs.force_update_base_snapshots }}" = "true" ] || ! git checkout ${{ steps.vars.outputs.vrt_diff_base_branch }}; then
            git checkout -b ${{ steps.vars.outputs.vrt_diff_base_branch }}
            echo "required_base_snapshots=true" >> $GITHUB_OUTPUT
          fi
        id: checkouts
      - name: Checkout base
        run: git checkout ${{ steps.vars.outputs.base_sha }}
        if: steps.checkouts.outputs.required_base_snapshots
      - name: Install npm modules on base
        run: ${{ inputs.install_command }}
        if: steps.checkouts.outputs.required_base_snapshots
      - name: Take snapshots on base
        run: ${{ inputs.snapshots_command }}
        if: steps.checkouts.outputs.required_base_snapshots
      - name: Copy snapshots to vrt on base
        run: cp -r ${{ inputs.snapshots_dirpath }} ${{ steps.vars.outputs.vrt_diff_workspace }}/${{ steps.vars.outputs.vrt_diff_dirname }}
        if: steps.checkouts.outputs.required_base_snapshots
      - name: Push snapshots of base
        run: |
          cd ${{ steps.vars.outputs.vrt_diff_workspace }}
          git add ${{ steps.vars.outputs.vrt_diff_dirname }}
          git commit -m "Update screenshots [ci skip]"
          git push origin HEAD:${{ steps.vars.outputs.vrt_diff_base_branch }} -f
        if: steps.checkouts.outputs.required_base_snapshots
      - name: Copy base snapshots from vrt
        run: cp -r ${{ steps.vars.outputs.vrt_diff_workspace }}/${{ steps.vars.outputs.vrt_diff_dirname }} ${{ inputs.snapshots_dirpath }}
        if: steps.checkouts.outputs.required_base_snapshots == false
      - name: Checkout head
        run: git checkout ${{ steps.vars.outputs.head_sha }}
        if: github.event_name == 'pull_request'
      - name: Install npm modules on head
        run: ${{ inputs.install_command }}
        if: github.event_name == 'pull_request'
      - name: Take snapshots on head
        run: ${{ inputs.snapshots_command }}
        if: github.event_name == 'pull_request'
      - name: Copy snapshots to vrt on head
        run: |
          rm -rf ${{ steps.vars.outputs.vrt_diff_workspace }}/${{ steps.vars.outputs.vrt_diff_dirname }}
          cp -r ${{ inputs.snapshots_dirpath }} ${{ steps.vars.outputs.vrt_diff_workspace }}/${{ steps.vars.outputs.vrt_diff_dirname }}
        if: github.event_name == 'pull_request'
      - name: Push snapshots of head
        run: |
          cd ${{ steps.vars.outputs.vrt_diff_workspace }}
          git add -N ${{ steps.vars.outputs.vrt_diff_dirname }}
          if ! git diff --exit-code --quiet ${{ steps.vars.outputs.vrt_diff_dirname }}
          then
            git add ${{ steps.vars.outputs.vrt_diff_dirname }}
            echo "added_count=$(git diff HEAD --diff-filter=A --name-only | wc -l | xargs)" >> $GITHUB_OUTPUT
            echo "changed_count=$(git diff HEAD --diff-filter=M --name-only | wc -l | xargs)" >> $GITHUB_OUTPUT
            echo "deleted_count=$(git diff HEAD --diff-filter=D --name-only | wc -l | xargs)" >> $GITHUB_OUTPUT
            git commit -m "Update screenshots [ci skip]"
            git push origin HEAD:${{ steps.vars.outputs.vrt_diff_temp_branch }} -f
            echo "changed_snapshots_url=https://github.com/${{ inputs.vrt_repo }}/commit/$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          fi
        id: results
        if: github.event_name == 'pull_request'
      - name: Create or update comment
        uses: actions/github-script@v7
        with:
          script: |
            const subject = "Visual Regression Test Result";
            const changedSnapshotUrl = '${{ steps.results.outputs.changed_snapshots_url }}';
            const addedCount = '${{ steps.results.outputs.added_count }}';
            const changedCount = '${{ steps.results.outputs.changed_count }}';
            const deletedCount = '${{ steps.results.outputs.deleted_count }}';
            const result = !changedSnapshotUrl
              ? "✅ No change"
              : `❗ Updated: ${changedCount}, Added: ${addedCount}, Deleted: ${deletedCount}`;
            const commentBody = `### ${subject}\n\n${result}\n${changedSnapshotUrl}`;

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const previousComment = comments.find(
              (comment) =>
                comment.user.login === "github-actions[bot]" &&
                comment.body.includes(subject)
            );

            if (previousComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: previousComment.id,
                body: commentBody,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody,
              });
            }
        if: github.event_name == 'pull_request'
      - name: Upload test-results on failure for debug
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results
        if: failure()
